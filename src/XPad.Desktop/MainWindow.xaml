<Window x:Class="XPad.Desktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:app="clr-namespace:XPad.Desktop.Application"
        xmlns:controls="clr-namespace:XPad.Desktop.Controls"
        mc:Ignorable="d"
        Title="XPad" Height="350" Width="525">
    <Window.Resources>
        <!--=================================================================
            Critter List
          ==================================================================-->
        <Style x:Key="CritterListItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Canvas.Left" Value="{Binding Path=X}" />
            <Setter Property="Canvas.Top" Value="{Binding Path=Y}" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Ellipse Fill="{TemplateBinding Background}" Width="25" Height="25" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="CornflowerBlue" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--=================================================================
            Instruction TreeViewItem
          ==================================================================-->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15"
                              Height="13"
                              Background="Transparent">
                            <Path x:Name="ExpandPath"
                                  HorizontalAlignment="Left" 
                                  VerticalAlignment="Center" 
                                  Margin="1"
                                  Fill="#444"
                                  Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data"
                                        TargetName="ExpandPath"
                                        Value="M 0 6 L 6 0 L 6 6 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                                       StrokeThickness="5"
                                       Stroke="Black"
                                       StrokeDashArray="1 2"
                                       Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="InstructionTreeItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="IsExpanded" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}"
                                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                            <Border Name="Bd"
                                    Grid.Column="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                                            Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--=================================================================
            Program List
          ==================================================================-->
        <DataTemplate x:Key="ProgramListItemTemplate">
            <TreeView ItemsSource="{Binding Path=Sources}"
                      ItemContainerStyle="{StaticResource InstructionTreeItemStyle}"
                      SelectedItemChanged="TreeView_SelectedItemChanged" />
        </DataTemplate>

        <Style x:Key="AddInstructionDropDownStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent">
                            <TextBlock x:Name="Text" Text="{TemplateBinding Content}" TextDecorations="Underline" Foreground="Blue" Cursor="Hand" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Text" Property="Foreground" Value="Red" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="MoveSourceEditTemplate" DataType="{x:Type app:MoveInstructionSource}">
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="Move To " />
                <TextBlock VerticalAlignment="Center" Text="X:" />
                <TextBox Text="{Binding Path=DestX}" />
                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Text="Y:" />
                <TextBox Text="{Binding Path=DestY}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="LoopSourceEditTemplate" DataType="{x:Type app:LoopInstructionSource}">
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="Loop " />
                <TextBox Text="{Binding Path=Repetitions}" />
                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Text="Times" />
            </StackPanel>
        </DataTemplate>

        <ResourceDictionary x:Key="ProgramListResources">
            <DataTemplate DataType="{x:Type app:MoveInstructionSource}">
                <ContentPresenter x:Name="Cp" Content="{Binding}">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Move To X:" />
                                <TextBlock Text="{Binding Path=DestX}" />
                                <TextBlock Margin="8 0 0 0" Text="Y:" />
                                <TextBlock Text="{Binding Path=DestY}" />
                            </StackPanel>
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                        <Setter TargetName="Cp" Property="ContentTemplate" Value="{StaticResource MoveSourceEditTemplate}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type app:LoopInstructionSource}" ItemsSource="{Binding Path=Sources}">
                <ContentPresenter x:Name="Cp" Content="{Binding}">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Loop " />
                                <TextBlock Text="{Binding Path=Repetitions}" />
                                <TextBlock Text=" Times" />
                            </StackPanel>
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                        <Setter TargetName="Cp" Property="ContentTemplate" Value="{StaticResource LoopSourceEditTemplate}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type app:AddPseudoInstructionSource}">
                <controls:DropDownButton Content="Add" Style="{StaticResource AddInstructionDropDownStyle}">
                    <ButtonBase.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Move" Click="AddMoveInstructionButton_Click" />
                            <MenuItem Header="Loop" Click="AddLoopInstructionButton_Click" />
                        </ContextMenu>
                    </ButtonBase.ContextMenu>
                </controls:DropDownButton>
            </DataTemplate>
        </ResourceDictionary>

        <!--=================================================================
            Run Button
          ==================================================================-->
        <Style x:Key="RunButtonStyle" TargetType="{x:Type Button}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsProgramRunning}" Value="True">
                    <Setter Property="Background" Value="Gold" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!--=================================================================
        VISUAL TREE
      ==================================================================-->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <ListBox x:Name="CritterList" ItemsSource="{Binding Path=Critters}"
                 ItemContainerStyle="{StaticResource CritterListItemStyle}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>

        <StackPanel Grid.Column="1">
            <Button Click="RunButton_Click" Content="Run" MinWidth="70" MinHeight="30"
                    Style="{StaticResource RunButtonStyle}" />
            <Button Click="AddCritterButton_Click" Content="Add Critter" MinWidth="70" MinHeight="30" />
            <ListBox x:Name="ProgramList"
                     ItemsSource="{Binding Path=Critters}"
                     SelectedItem="{Binding ElementName=CritterList, Path=SelectedItem}"
                     ItemTemplate="{StaticResource ProgramListItemTemplate}"
                     Resources="{StaticResource ProgramListResources}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </StackPanel>
    </Grid>
</Window>
